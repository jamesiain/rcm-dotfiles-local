set background=dark
colorscheme neodark

let g:airline_theme = 'bubblegum'
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_symbols.paste = 'ᖘ'
let g:airline_symbols.whitespace = 'Ξ'

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

set signcolumn=auto

let g:vimwiki_list = [{'path': '~/.vimwiki',
                     \ 'syntax': 'markdown', 'ext': '.md'}]

set stl+=%{ConflictedVersion()}

set lazyredraw     " Improves responsiveness during macro execution
set updatetime=1000

set foldmethod=syntax
set relativenumber " Most line numbers are relative to the current line
set cursorline     " Highlight the current horizontal line

set pastetoggle=<F2>    " To disable autoindenting before a large paste

set tabstop=4     " TABs are 4 spaces wide
set shiftwidth=4  " Indent by 4 spaces

" replace tabs with spaces, and remove all trailing whitespace
nnoremap <F5> :retab<Bar>:keeppatterns keepjumps %s/\s\+$//e<CR>

match ErrorMsg '\s\+$'  " Highlight trailing whitespace

" Clear the search buffer (search highlighting)
:nnoremap <ESC><ESC> :nohlsearch<CR>

" disable Ex Mode & use Q for formatting paragraphs
vmap Q gq
nmap Q gqap

" Yank from cursor to EOL, consistent with C and D
nnoremap Y y$

" Indent shifting does not exit Visual Mode
vnoremap < <gv
vnoremap > >gv

" Switch between the last two files
nnoremap <leader><leader> <c-^>

" Zoom a vim pane to maximum, and re-balance
nnoremap <leader>- :wincmd _<CR>:wincmd \|<CR>
nnoremap <leader>= :wincmd =<CR>

" Show Tagbar
nnoremap <F8> :TagbarToggle<CR>

" Open to linenumber - ex. vim my_file.c:100
" https://github.com/halogenandtoast/vim/blob/master/vimrc#L259

function! OpenToLineNumber()
  let filename=expand("%")
  let parts=split(filename, ":")
  exec ":e " . parts[0]
  exec ":" . parts[1]
  redraw!
endfunction

autocmd BufNewFile,BufEnter,BufRead *:* nested call OpenToLineNumber()

" Save anytime we leave a buffer or Vim loses focus
autocmd BufLeave,FocusLost * silent! wall

" Use clang-format to clean up source file syntax
let g:clang_format#code_style = "google"
let g:clang_format#style_options = {
  \ "Standard" : "C++11",
  \ "BreakBeforeBraces" : "Stroustrup"}
autocmd FileType c,cpp,objc nnoremap <buffer><Leader>cf :<C-u>ClangFormat<CR>
autocmd FileType c,cpp,objc vnoremap <buffer><Leader>cf :ClangFormat<CR>
autocmd FileType c,cpp,objc map <buffer><Leader>x <Plug>(operator-clang-format)
" autocmd FileType c,cpp,objc ClangFormatAutoEnable

" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ 'mode': 'passive',
  \ 'active_filetypes': [],
  \ 'passive_filetypes': [] }

" To use fzf in Vim, add the following line to your .vimrc:
set rtp+=/home/linuxbrew/.linuxbrew/opt/fzf
